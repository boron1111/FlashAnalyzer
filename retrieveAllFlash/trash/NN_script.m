% Solve a Pattern Recognition Problem with a Neural Network
% Script generated by NPRTOOL
% Created Tue Feb 20 19:36:13 CST 2018
%
% This script assumes these variables are defined:
%
%   temperature - input data.
%   target - target data.

inputData1=inputData;
target1=target;
inputData=inputData1(1:2:end,:);
target=target1(1:2:end,:);
testData=inputData1(2:2:end,:);
testTarget=target1(2:2:end,:);

x = inputData';
t = target';

% Create a Pattern Recognition Network
hiddenLayerSize = 10;
net = patternnet(hiddenLayerSize);


% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 80/100;
net.divideParam.valRatio = 20/100;
net.divideParam.testRatio = 0;


% Train the Network
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
% e = gsubtract(t,y);
% tind = vec2ind(t);
% yind = vec2ind(y);
% percentErrors = sum(tind ~= yind)/numel(tind);
% performance = perform(net,t,y);
figure, plotconfusion(t,y)

y=net(testData');
figure,plotconfusion(testTarget',y);
figure,plotroc(testTarget',y);

% View the Network
% view(net)

% Plots
% Uncomment these lines to enable various plots.
% figure, plotperform(tr)
% figure, plottrainstate(tr)
% figure, plotconfusion(t,y)
% figure, plotroc(t,y)
% figure, ploterrhist(e)

